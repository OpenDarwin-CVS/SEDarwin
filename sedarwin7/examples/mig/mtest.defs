/*-
 * Copyright (c) 2005 SPARTA, Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */                                      
/* -*- C++ -*- */

subsystem mtest 1200;

#include <mach/std_types.defs>
#include <mach/mach_types.defs>

import "mtest.h";

type intarray = array [] of int;

/* Print an intetger.

   This illustrates MiG adding the sender message label into a message
   (the equivilent of adding a request for the sender label trailer into
   a call to mach_msg_recv()). Within the server, label may be used to 
   explicitely calculate or request an access control decision from the
   MAC framework.
	
   dest:   destination (server) port
   access: this is provided by MiG. The client does not specify this.
   n:      integer to print
   label:  also handled by MiG. the client never sees this.

*/
routine printi (dest : mach_port_t;
	        accessflag access : int;
		n : int;
		/*
		   Addition of sender label. 'servermsglabels' is an 
		   argument added by our MiG modificiations.
		*/
		servermsglabels label : msg_labels_t);

/* Print an array of integers.

   This illustrates MiG performing simple access control via checking the
   sender and reciever labels internally.

   dest:   destination (server) port
   access: this is provided by MiG. The client does not specify this.
   na:     array of integers to print

*/
routine printia checkaccess (dest : mach_port_t;
			     accessflag access : int;
			     na : intarray);
